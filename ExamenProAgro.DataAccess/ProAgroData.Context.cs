//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExamenProAgro.DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExamenRelutamientoProAgroEntities : DbContext
    {
        public ExamenRelutamientoProAgroEntities()
            : base("name=ExamenRelutamientoProAgroEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CAT_ESTADO> CAT_ESTADO { get; set; }
        public virtual DbSet<CAT_GEORREFERENCIAS> CAT_GEORREFERENCIAS { get; set; }
        public virtual DbSet<CAT_USUARIO> CAT_USUARIO { get; set; }
        public virtual DbSet<CAT_USUARIO_ESTADO> CAT_USUARIO_ESTADO { get; set; }
    
        public virtual ObjectResult<string> AddUser(string password, string nombre, string rFC)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AddUser", passwordParameter, nombreParameter, rFCParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", idUserParameter);
        }
    
        public virtual ObjectResult<ObtenerGeorreferencia_Result> ObtenerGeorreferencia(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerGeorreferencia_Result>("ObtenerGeorreferencia", idUsuarioParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> idUser, string password, string nombre, string rFC)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", idUserParameter, passwordParameter, nombreParameter, rFCParameter);
        }
    
        public virtual ObjectResult<ValidaLogin_Result> ValidaLogin(string user, string password)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidaLogin_Result>("ValidaLogin", userParameter, passwordParameter);
        }
    
        public virtual ObjectResult<ObtenerEstados_Result> ObtenerEstados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerEstados_Result>("ObtenerEstados");
        }
    
        public virtual ObjectResult<ObtenerUsuario_Result> ObtenerUsuario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerUsuario_Result>("ObtenerUsuario");
        }
    }
}
